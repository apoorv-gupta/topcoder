#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;


class TrianglesContainOriginEasy {
public:
   int sign(int x1,int y1, int x2, int y2, int px, int py){
      int res = (py-y1)*(x2-x1)-(y2-y1)*(px-x1);
      if(res == 0) return 0;
      else if(res<0) return -1;
      return 1;
   }
	int count(vector <int> x, vector <int> y) {
           int n = x.size();
           int ans=0;
           for(int i=0;i<n;++i)
              for(int j=i+1;j<n;++j)
                 for(int k=j+1;k<n;++k){
                    if(sign(x[i],y[i],x[j],y[j],x[k],y[k]) == sign(x[i],y[i],x[j],y[j],0,0))
                    if(sign(x[k],y[k],x[j],y[j],x[i],y[i]) == sign(x[k],y[k],x[j],y[j],0,0))
                    if(sign(x[i],y[i],x[k],y[k],x[j],y[j]) == sign(x[i],y[i],x[k],y[k],0,0))
                       ans++;
                 }
           return ans;
        }
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, vector <int> p0, vector <int> p1, bool hasAnswer, int p2) {
   cout << "Test " << testNum << ": [" << "{";
   for (int i = 0; int(p0.size()) > i; ++i) {
      if (i > 0) {
         cout << ",";
      }
      cout << p0[i];
   }
   cout << "}" << "," << "{";
   for (int i = 0; int(p1.size()) > i; ++i) {
      if (i > 0) {
         cout << ",";
      }
      cout << p1[i];
   }
   cout << "}";
   cout << "]" << endl;
   TrianglesContainOriginEasy *obj;
   int answer;
   obj = new TrianglesContainOriginEasy();
   clock_t startTime = clock();
   answer = obj->count(p0, p1);
   clock_t endTime = clock();
   delete obj;
   bool res;
   res = true;
   cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
   if (hasAnswer) {
      cout << "Desired answer:" << endl;
      cout << "\t" << p2 << endl;
   }
   cout << "Your answer:" << endl;
   cout << "\t" << answer << endl;
   if (hasAnswer) {
      res = answer == p2;
   }
   if (!res) {
      cout << "DOESN'T MATCH!!!!" << endl;
   } else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
      cout << "FAIL the timeout" << endl;
      res = false;
   } else if (hasAnswer) {
      cout << "Match :-)" << endl;
   } else {
      cout << "OK, but is it right?" << endl;
   }
   cout << "" << endl;
   return res;
}
int main() {
   bool all_right;
   all_right = true;

   vector <int> p0;
   vector <int> p1;
   int p2;

   {
      // ----- test 0 -----
      int t0[] = {-1,-1,1};
      p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
      int t1[] = {1,-1,0};
      p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
      p2 = 1;
      all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
      // ------------------
   }

   {
      // ----- test 1 -----
      int t0[] = {-1,-1,1,2};
      p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
      int t1[] = {1,-1,2,-1};
      p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
      p2 = 2;
      all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
      // ------------------
   }

   {
      // ----- test 2 -----
      int t0[] = {-1,-2,3,3,2,1};
      p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
      int t1[] = {-2,-1,1,2,3,3};
      p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
      p2 = 8;
      all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
      // ------------------
   }

   {
      // ----- test 3 -----
      int t0[] = {1,5,10,5,-5,7,-9,-6,-3,0,8,8,1,-4,7,-3,10,9,-6};
      p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
      int t1[] = {5,-6,-3,4,-2,-8,-7,2,7,4,2,0,-4,-8,7,5,-5,-2,-9};
      p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
      p2 = 256;
      all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
      // ------------------
   }

   if (all_right) {
      cout << "You're a stud (at least on the example cases)!" << endl;
   } else {
      cout << "Some of the test cases had errors." << endl;
   }
   return 0;
}
// END KAWIGIEDIT TESTING
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
